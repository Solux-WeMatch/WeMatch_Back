<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WeMatch.wematch.mapper.Mapper">

    <select id="ifExists" resultType="boolean">
        select count(*) from Member where email=#{email}
    </select>

    <select id="test" resultType="String" >
        select email from Member where name=#{name}
    </select>

    <insert id="save">
        insert into Member(email,password,name,role) values(#{email},#{password},#{name},#{role})
    </insert>

    <select id="findByEmail" resultType="WeMatch.wematch.domain.member.entity.Member">
        select member_id as id, email, password, name, role from Member where email=#{email}
    </select>

    <select id="getEvent" resultType="WeMatch.wematch.domain.group.dto.TeamEventsResponseDto">

        SELECT
        e.event_id AS title,
        e.start_schedule AS start,
        e.end_schedule AS end
        FROM event e
        JOIN Team_Member tm ON tm.member_id = e.member_id
        WHERE tm.team_id = #{teamId}

    </select>

    <select id="getTeamMembers" resultType="String">
        select m.name
        from Team_Member g
        join member m on m.member_id=g.member_id
        where team_id=#{groupId}
    </select>
    <select id="getTeamMembersId" resultType="String">
        select m.member_id
        from Team_Member g
        join member m on m.id=g.member_id
        where team_id=#{groupId}
    </select>
    <select id="getTeamName" resultType="String">
        select teamname
        from team
        where team_id=1
    </select>

    <select id="getSleep" resultType="WeMatch.wematch.domain.group.dto.SleepTimeDto">
        select start_sleep as startAt , end_sleep as endAt
        from team
        where team_id=#{groupId}
    </select>
    <update id="updateSleep">
        update team
        set start_sleep=#{sleepTimeDto.startAt},end_sleep=#{sleepTimeDto.endAt}
        where team_id=#{groupId}
    </update>


    <update id="insertMinute">
        UPDATE team
        SET minute_schedule=#{minute}
        WHERE team_id=#{groupId};
    </update>

    <select id="getMinute" resultType="WeMatch.wematch.domain.group.dto.MinuteTimeResponseDto">
        select minute_schedule
        from team
        where team_id=#{groupId}
    </select>

    <select id="getTeamMembersByCandidate" resultType="Long">
        select t.member_id
        from candidate c
        join Team_Member as t
        on c.team_id=t.team_id
        where c.candidate_id=#{candidateId}
    </select>
    <select id="getTeamNameByCandidateId" resultType="String">
        select t.teamname
        from candidate as c
        join team as t
        on c.team_id=t.team_id
        where c.candidate_id=#{candidateId}
    </select>

    <select id="getFixedDate" resultType="WeMatch.wematch.domain.group.dto.GetCandidateFixDto">
        select start_schedule as startDate, end_schedule as endDate
        from candidate
        where candidate_id=#{candidateId}
    </select>

    <insert id="insertFixedTime">
        insert into event(member_id,eventname,start_schedule,end_schedule)
        values(#{memberId},#{teamName},#{insertFixedTimeRequestDto.startAt},#{insertFixedTimeRequestDto.endAt})
    </insert>


    <select id="getCandidate" resultType="WeMatch.wematch.domain.group.dto.InsertFixedTimeRequestDto">
        select start_schedule as startAt, end_schedule as endAt
        from candidate
        where candidate_id=#{candidateId}
    </select>

    <delete id="deleteCandidates">
        delete from candidate
        where team_id=#{groupId}
    </delete>

    <insert id="insertCandidates" parameterType="WeMatch.wematch.domain.group.dto.TeamEventsResponseDto">
        insert into candidate(team_id,start_schedule,end_schedule)
        values
        <foreach collection="results" item="results" index="index" separator=",">
            (#{groupId},#{results.start},#{results.end})
        </foreach>
    </insert>



    <select id="getTeamList" resultType="WeMatch.wematch.domain.member.dto.TeamListResponseDto">
        SELECT t.team_id as groupId, t.teamname as groupName
        FROM Team t
        JOIN Team_Member tm ON t.team_id = tm.team_id
        WHERE tm.member_id = #{memberId};
    </select>

    <select id="getTeamId" resultType="Long">
        select team_id from Team where teamname=#{teamName}
    </select>

    <insert id="createTeam">
        insert into Team(teamname) values(#{teamName})
    </insert>

    <insert id="saveTeam">
        insert into Team_Member(team_id, member_id) values(#{teamId}, #{memberId})
    </insert>

    <delete id="exitTeam">
        delete from Team_Member where team_id=#{groupId} and member_id=#{memberId}
    </delete>

    <delete id="deleteTeam">
        delete from Team where team_id=#{groupId}
    </delete>

    <update id="changePassword">
        update member
        set password=#{randomPassword}
        where email=#{email}
    </update>

    <select id="getCandidateIds" resultType="Long">
        select candidate_id
        from candidate
        where team_id=#{groupId}
    </select>
</mapper>
